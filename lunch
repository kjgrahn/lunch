#!/usr/bin/perl -w
#
# Copyright (c) 2002, 2012, 2025 Jörgen Grahn
# All rights reserved.
#
# lunch - calculate working hours from
# (in, out, lunch) triples
#
# Bugs: the original Excel sheet does ceil() on
# tenths of hours - this one rounds.
# I lose time, but better safe than sorry...
#
# /jgr
#
use strict;
use POSIX;

# Round a float to x.0, x.25, x.50 or x.75.
sub quart($) {
    my $n = shift;
    my $q = floor($n);
    my $d = $n - $q;

    if($d>0.875) {
        $q += 1;
    } elsif($d>0.625) {
        $q += .750;
    } elsif($d>0.375) {
        $q += .500;
    } elsif($d>0.125) {
        $q += .250;
    }
    return $q;
}

while(<>) {

    /^\s*(\d{1,2}.\d\d)\s+(\d{1,2}.\d\d)\s+(\d{1,2}.\d\d)/ or print, next;

    my ($morn, $eve, $lunch) = ($1, $2, $3);

    # make minutes of everything

    my ($mh, $mm) = $morn =~ /(\d+).(\d+)/;
    my ($eh, $em) = $eve =~ /(\d+).(\d+)/;
    my ($lh, $lm) = $lunch =~ /(\d+).(\d+)/;

    die "most hours only have sixty minutes...\n"
        unless ($mm<60 && $em<60 && $lm<60);

    my $ms = $mh*60+$mm;
    my $es = $eh*60+$em;
    my $ls = $lh*60+$lm;

    # calculate working time, in hours

    my $works = $es - $ms - $ls;

    my $workh = $works / 60;

    # finally, our new time reporting system wants me
    # to calculate the deviation from standard time
    # (normally 8.00) manually

    my $deviation = $workh - 8;

    printf("%5s %5s %4s ->%2dh%02dm (%5.2f h)\n",
           $morn, $eve, $lunch,
           $works/60, $works % 60,
           quart $workh);
}

exit 0;
