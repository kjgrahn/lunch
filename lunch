#!/usr/bin/perl -w  # -*- perl -*-
#
# $Id: lunch,v 1.2 2012-07-27 22:56:24 grahn Exp $
#
# lunch - calculate working hours from
# (in, out, lunch) triples
#
# Bugs: the original Excel sheet does ceil() on
# tenths of hours - this one rounds.
# I lose time, but better safe than sorry...
#
# /jgr
#

use POSIX;

while(<>) {

    /^(\d{1,2}.\d\d)\D+(\d{1,2}.\d\d)\D+(\d{1,2}.\d\d)/ or print, next;

    ($morn, $eve, $lunch) = ($1, $2, $3);

    # make minutes of everything

    ($mh, $mm) = $morn =~ /(\d+).(\d+)/;
    ($eh, $em) = $eve =~ /(\d+).(\d+)/;
    ($lh, $lm) = $lunch =~ /(\d+).(\d+)/;

    die "most hours only have sixty minutes...\n"
        unless ($mm<60 && $em<60 && $lm<60);

    $ms = $mh*60+$mm;
    $es = $eh*60+$em;
    $ls = $lh*60+$lm;

    # calculate working time, in hours

    $works = $es - $ms - $ls;

    $workh = $works / 60;

    $workq = floor($workh);
    $addon = $workh - $workq;
    if($addon>0.875) {
        $workq += 1;
    } elsif($addon>0.625) {
        $workq += .750;
    } elsif($addon>0.375) {
        $workq += .500;
    } elsif($addon>0.125) {
        $workq += .250;
    }

    # print working time, rounded to 0.01h

    printf("%s %s %s ->%2dh%02dm (%.2f h; %.1f h; %.2f h)\n",
           $morn, $eve, $lunch,
           $works/60, $works % 60,
           $workh, $workh, $workq);
}

exit 0;
